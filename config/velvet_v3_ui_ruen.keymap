#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp TAB           &kp Q  &kp W         &kp E         &kp R         &kp T                                     &kp Y  &kp U   &kp I      &kp O    &kp P      &kp BSPC
&kp ESCAPE        &kp A  &kp S         &kp D         &kp F         &kp G                                     &kp H  &kp J   &kp K      &kp L    &kp SEMI   &kp RETURN
&kp LEFT_CONTROL  &kp Z  &kp X         &kp C         &kp V         &kp B                                     &kp N  &kp M   &kp COMMA  &kp DOT  &kp SLASH  &kp RIGHT_CONTROL
                         &kp LEFT_GUI  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1  &mt LEFT_SHIFT SPACE    &kp SPACE  &mo 2  &trans  &mkp MB1   &mo 4
            >;

            display-name = "en";
        };

        nav {
            bindings = <
&kp LG(RETURN)  &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                                   &kp F6          &kp F7          &kp F8        &kp F9           &kp F10   &kp BACKSPACE
&kp LG(A)       &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &kp LA(N4)  &kp LA(N5)                               &kp LC(LEFT)    &mkp MB1        &mkp MB2      &kp LC(RIGHT)    &mo 4     &kp LG(SQT)
&kp LG(Q)       &kp LG(Z)   &kp LG(X)   &kp LG(C)   &kp LG(V)   &kp DEL                                  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp RALT  &kp LC(F2)
                            &kp F11     &kp F12     &trans      &trans      &trans    &kp RIGHT_CONTROL  &mo 3           &trans          &kp PAGE_UP   &kp PAGE_DOWN
            >;

            display-name = "nav";
        };

        sym {
            bindings = <
&kp GRAVE         &kp N1       &kp NUMBER_2    &kp NUMBER_3      &kp NUMBER_4  &kp NUMBER_5                                  &kp N6     &kp NUMBER_7  &kp NUMBER_8       &kp NUMBER_9  &kp NUMBER_0  &kp BACKSPACE
&kp LEFT_SHIFT    &kp EXCL     &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LPAR      &kp COLON                                     &kp EQUAL  &kp RPAR      &kp RIGHT_BRACKET  &kp RBRC      &kp SQT       &kp DQT
&kp LEFT_CONTROL  &kp PERCENT  &kp AMPERSAND   &kp PIPE          &kp ASTRK     &kp PLUS                                      &kp MINUS  &kp HASH      &kp UNDERSCORE     &kp CARET     &kp NUBS      &kp AT
                               &trans          &trans            &kp LEFT_ALT  &mo 3         &mt LEFT_SHIFT SPACE    &trans  &trans     &trans        &trans             &trans
            >;

            display-name = "sym";
        };

        adj {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                    &none   &none    &none    &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "adj";
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
